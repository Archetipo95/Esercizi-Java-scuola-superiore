package PingPong;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;

public class Palla implements Runnable {

	private int pallaX, pallaY;
	private int deltaX, deltaY;
	private int diametro;
	private Color c;
	private MainPong pannello;
	private Thread thread;
	
	private boolean inGioco = true;
	private boolean primoTiro = true;
	
	public Palla(MainPong pannello, int width, int height) {
		this.pannello = pannello;
		pallaX = width/2;
		pallaY = height/2;
		deltaX = 3;
		deltaY = 3;
		diametro = 20;
		c = new Color((int) (Math.random() * 256),
				(int) (Math.random() * 256),
				(int) (Math.random() * 256));
		thread = new Thread(this);
		thread.start();	

	}
	
	public void run() {
		
		while (inGioco) {
			rimbalzi();
			pannello.repaint();
			
			try {
				Thread.sleep(5 + (int) (Math.random() * 5));
				} catch (InterruptedException e) {
				System.out.println(e);
			}
		}
	}
	
	public void rimbalzi() {
		if(primoTiro){
			int casuale = (int)Math.random()+1;
			System.out.println(casuale);
		}
		
		pallaX+= deltaX;
		pallaY+= deltaY;
		
		if (pallaX <= 0)									// rimbalzo sx
			deltaX = -deltaX;
		
		if (pallaX + diametro >= pannello.getWidth())		// rimbalzo dx
			deltaX = -deltaX;
		
		if (pallaY <= 0)									// rimbalzo giu
			deltaY = -deltaY;
		
		if (pallaY + diametro >= pannello.getHeight())		// rimbalzo su
			deltaY = -deltaY;

	}
	
	public void disegna(Graphics g) {
		Graphics2D g2 = (Graphics2D) g;
		g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
				RenderingHints.VALUE_ANTIALIAS_ON);
		g2.setColor(c);
		g2.fillOval(pallaX, pallaY, diametro, diametro);
		
	}
	
}